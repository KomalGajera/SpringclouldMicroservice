package com.example.paymentservice.controller;

import java.math.BigDecimal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.paymentservice.dto.APIResponse;
import com.example.paymentservice.model.Payment;
import com.example.paymentservice.service.PaymentService;
import com.example.paymentservice.util.ApplicationConstant.PaymentStatus;

@RestController
@Validated
@Transactional
@RequestMapping("/payment")
public class PaymentController {

	@Autowired
	private PaymentService paymentService;

	@Autowired
	private MessageSource messages;

	@GetMapping(value = "/updatepayment")
	public Payment updatePaymentDetail(@RequestBody Payment payment) {

		return paymentService.save(payment);

	}

	/*
	 * @GetMapping(value = "/updatepayment/{orderid}/{amount}") public
	 * ResponseEntity<APIResponse> updatePaymentDetail(@PathVariable("orderid") Long
	 * id,
	 * 
	 * @PathVariable("amount") BigDecimal amount) { Payment payment = new
	 * Payment(null, id, amount, PaymentStatus.BILLED);
	 * 
	 * Payment finalPayment = paymentService.save(payment);
	 * 
	 * return ResponseEntity.status(HttpStatus.OK).body(new
	 * APIResponse(HttpStatus.OK.value(), true,
	 * messages.getMessage("payment save...", null,
	 * LocaleContextHolder.getLocale()), finalPayment)); }
	 */

}
